youtube link to video : https://www.youtube.com/watch?v=qV3CVW2vHFk

SETTING UP LARAVEL SANCTUM WITH NUXT 3

1)  create a laravel project through following command
    
    composer create-project laravel/laravel PROJECT-NAME

2)  get laravel/sanctum package by running following command in cmd , cd to Laravel backend
    composer require laravel/sanctum

    read more about laravel Sanctum on below link

    https://laravel.com/docs/10.x/sanctum#introduction


3)  Next, you should publish the Sanctum configuration and migration files using 
    the vendor:publish Artisan command
    
    php artisan vendor:publish --provider="Laravel\Sanctum\SanctumServiceProvider"

4)  before running the following command create your database in localhost and connect
    your laravel project to database through .env file

    php artisan migrate

5)  Next, if you plan to utilize Sanctum to authenticate a SPA, you should add Sanctum's 
    middleware to your api middleware group within your application's app/Http/Kernel.php file:

    so uncomment \Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful::class, in kernal.php file

    'api' => [
        \Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful::class,
        \Illuminate\Routing\Middleware\ThrottleRequests::class.':api',
        \Illuminate\Routing\Middleware\SubstituteBindings::class,
    ],

6)  now make an Auth Controller by running following command

        php artisan make:controller AuthController

    and make login,logout and register methods as shown below

            <?php

                namespace App\Http\Controllers;

                use Illuminate\Http\Request;
                use illuminate\Auth\AuthenticationException;
                use illuminate\Support\Facades\Auth;

                class AuthController extends Controller
                {
                    public function login (Request $request)
                    {
                        if(!Auth::attempt($request->only('email','password')))
                        {
                            throw new AuthenticationException();
                        }
                    }
                    public function register (Request $request)
                    {
                        //using user model here to register user
                        $user = new User;

                        $user->name = $request->name;
                        $user->email= $request->email;
                        $user->password =  bycrypt($request->password);

                        $user->save();
                    }
                    public function logout (Request $request)
                    {
                        Auth::logout();
                        $request->session()->invalidate();
                        $request->session()->regeneratetoken();
                    }
                }


7)  now go to routes/web.php file and update routes

        Route::controller(AuthController::class)->group(function(){

                Route::post('login','login');
                Route::post('register','register');
                Route::get('logout','logout');
                //Route::get('route name','function name to call in Auth Controller class');
        });

    also dont forget to import the AuthController 

        use App\Http\Controllers\AuthController;

8)  now go to config folder and find sanctum.php file and find SANCTUM_STATEFUL_DOMAINS. now copy the variable 
    inside the env function (SANCTUM_STATEFUL_DOMAINS) and paste it in 
    .env file (where you made database connection)

    'stateful' => explode(',', env('SANCTUM_STATEFUL_DOMAINS', sprintf(
        '%s%s',
        'localhost,localhost:3000,127.0.0.1,127.0.0.1:8000,::1',
        Sanctum::currentApplicationUrlWithPort()
    ))),

9)  now in .env file copy and paste the following

    SESSION_DOMAIN = localhost
    SANCTUM_STATEFUL_DOMAINS = localhost:3000
    
    SANCTUM_STATEFUL_DOMAINS value must be the value of front end URL

10) now in config folder go to cors.php file and find paths and input all 
    the paths that you you will access through API. in our case we will put login,logout and register in paths

11) now in cors.php file give path to ypur front end URL to allowed_origin

    http://localhost:3000/ 

12) give value of true to support _credentials in cors.php file.

            'paths' => ['api/*', 'sanctum/csrf-cookie','login','register','logout'],

            'allowed_methods' => ['*'],

            'allowed_origins' => ['http://localhost:3000'],

            'allowed_origins_patterns' => [],

            'allowed_headers' => ['*'],

            'exposed_headers' => [],

            'max_age' => 0,

            'supports_credentials' => true,


13) create a test user by going into database/seeders/DatabaseSeeder.php file and writing following code.

            User::create([
                'name' => 'Test',
                'email' => 'test@example.com',
                'password' => bcrypt('password')
            ]);

    also import the user model here.

            use App\Models\User;

    now in cmd inside laravelBackend folder type the following command

            php artisan db:seed

14) now run php artisan serve command and leave the backend project



                    backend work completed


                    
                    now in Nuxt.js app

1)
 go to the following link to go to tailwind components

 